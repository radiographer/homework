const poleTrojkata = function (a, h) {
  const pole = (1 / 2) * a * h;
  return `Pole trókąta o podstawie ${a} i wysokości ${h} wynosi ${pole}`;
};

const pole = poleTrojkata(10, 10);
console.log(pole);



powyżej HOISTING, funkcja jako zmienna!



// 1
function czyMogeObejrzecFilm(wiek) {
  if (wiek < 18) {
    return "Nie możesz obejrzeć filmu";
  } else {
    return "Możesz obejrzeć film";
  }
}
const czyMoge = czyMogeObejrzecFilm(17);
console.log(czyMoge);

// 2
function czyMogeObejrzecFilm(wiek) {
    if (wiek < 18) {
      return "Nie możesz obejrzeć filmu";
    } 
    
    "Możesz obejrzeć film";
    }
  }

// 3
  function czyMogeObejrzecFilm(wiek) {

    let result = 'Możesz obejrzeć film'
    if (wiek < 18) {
      return "Nie możesz obejrzeć filmu";
    } 
    return result
  }


// 4
  function czyMogeObejrzecFilm(wiek) {
  
    return wiek < 18 ? 'Nie możesz obejrzeć filmu' : 'Możesz obejrzeć film'
  }












const queue = [];
const name = "test";

function orderCar(car, carQueue) {
  if (car && car.type) {
    carQueue.push(car);
  }
}

function produceCar(carQueue) {
  if (carQueue.lenght === 0) {
    console.log("Nie ma żadnych zamówień");
    return;
  }
  const car = carQueue.shift();

  car.mirrors = true;
  car.km = 20;
  car.engine = "v8";

  return car;
}

const ford = {
  type: "mustang",
  isDiesel: false,
};

// .push() - dodaje na końcu
// .pop() - odejmuje z końca tablicy
// .shift() - odejmuje z końca tablicy
// .unshift() - dodaje na początku tablicy

const ford2 = {
  type: "mondeo",
  isDiesel: true,
};

console.log("before", queue);
orderCar(ford, queue);
orderCar(ford2, queue);
console.log("after", queue);
const meNewCar = produceCar(queue);
console.log("my new car", meNewCar);
console.log("after production", queue);